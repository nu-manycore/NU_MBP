## SystemBulderParametersはYAMLファイル生成の為のパラメタである。
##
## - SystemBulderParameters はハッシュで SW, HW, HW_FREQ_MHZ, CyclicSync
##   を持つ
##
## - SW および HW はハッシュで core を持つ
##   - core はスカラで、任意のコアの種類を指定する
##     デフォルトは SW は Nios、HW は FPGA である。
##
## - HW_FREQ_MHZ に指定したものはそのままYAMLへ出力する
##   - 指定しない場合、SystemBuilderのYAMLには出力しない
##
## - CyclicSync に指定したものはそのままYAMLへ出力する
##   - init_startを指定しない場合、trueを出力する
##   - sw_base_nsecを指定しない場合、ソフトウェアのタスクの周期の
##     最大公約数を出力する
##   - hw_base_nsecを指定しない場合、1usを出力する

#SystemBulderParameters:
#  SW:
#    core: Nios
#  HW:
#    core: FPGA
#
#  HW_FREQ_MHZ: 100
#
#  CyclicSync:
#    init_start: true
#    sw_base_nsec: 1000000
#    hw_base_nsec: 1000
  
## SystemBuilderTypesは、SystemBuilderで取り扱える型を定義する
##
## SystemBuilderTypesはハッシュで、任意の型名を持つ
## 型名はハッシュで、以下を含む
## - size
##   型の(一要素の)サイズ(バイト)[必須]
## - align
##   型の(一要素の)アラインメント(バイト)
##   省略時はsizeと同じ
## - element
##   構造体の場合、メンバをシーケンスで指定する
##   メンバは配列を持てない
## - float
##   (一要素の)型が浮動小数点型の場合に指定する
##
## o 構造体のメンバは、全て同一の型でなければならない。
##   (MemoryChannelが、同一の型を扱うため)
##
## o 構造体のメンバには、配列は指定できない
##
## o デフォルトでは、以下の型が定義されている
##   char, short, int, long,
##   unsigned char, unsigned short, unsigned int, unsigned long,
##   float
##
## o doubleも定義されているが動作保証しない

#SystemBuilderTypes:
#  char: { size: 1, align: 1 }
#  short: { size: 2, align: 2 }
#  float: { size: 4, align: 4, float }

## EmbeddedCoderTypesはEmbedded Coderが使用する型を定義する
##
## EmbeddedCoderTypesはSystemBuilderTypesと大体同じであり、
## SystemBuilderの型を ref を用いて参照する事ができる
##
## o デフォルトでは以下の型が定義されている
##   int9_T, uint8_T, int16_T, uint16_T, int32_T, uint32_T,
##   real32_T, real64_T, real_T, time_T, boolean_T, int_T,
##   uint_T, ulong_T, char_T, uchar_T, byte_T,
##   creal32_T, creal64_T, creal_T, cint8_T, cuint8_T,
##   cint16_T, cuint16_T, cint32_T, cuint32_T
##
## o 整数型とfloatは、SystemBuilderの同じ型を参照し、
##   NBC/BC/MEMの各チャネルで通信を行う
## o 基本的に複素数型は、SystemBuilderではMemoryChannelに割り当
##   て、(elementで指定した順で)メンバにアクセスする
## o doubeを用いる型については動作保証しない

#EmbeddedCoderTypes:
#  int_T: &int32 { size: 4, align: 4, ref: int }
#  int8_T: { size: 1, align: 1, ref: char }
# int16_T: { size: 2, align: 2, ref: short }
# int32_T: *int32
# creal32_T: { size: 4, element: [re, ie], float }
