# -*- mode: makefile-gmake; coding: utf-8-unix; -*-

NIS_TOP_DIR = ..
MAKE_RULES_DIR = $(NIS_TOP_DIR)/make.rules

# USE_DMALLOC = n
# ENABLE_DEBUG = y

include $(MAKE_RULES_DIR)/dir.map.mk

include $(SIMULINK_XSD)/pre.simulink_xsd.mk

#
# CSP Translator Debug Customize
#

IDENT_CHECK = n

# OPTIMIZE = -O2

#
# End Customize
#

override CXXFLAGS += $(OPTIMIZE)
override CPPFLAGS += -I. $(SIMULINK_XSD_CPPFLAGS)
override LDFLAGS += $(SIMULINK_XSD_LDFLAGS)

#
# auto system check
#

ifeq ($(IDENT_CHECK),y)
override CPPFLAGS += -DUSE_IDENT
endif

TRANSLATOR_LDLIBS = $(SIMULINK_XSD_LDLIBS)
TRANSLATOR_PROG_DEPS = $(SIMULINK_XSD_LIBPATH)
MCOS_DUMP_DBG_PRINT_PROG_DEP = $(SIMULINK_XSD_LIBPATH)
ATK2_DUMP_DBG_PRINT_PROG_DEP = $(SIMULINK_XSD_LIBPATH)

TRANSLATOR_LDLIBS += -lyaml

TRANSLATOR_SRCS = csp_translator.cxx xml_csp.cxx c_codewriter.cxx
TRANSLATOR_HDRS = csp_translator.h xml_csp.h c_codewriter.h

TRANSLATOR_SRCS += arch_memchan.cxx
TRANSLATOR_HDRS += arch_memchan.h

TRANSLATOR_SRCS += atk2_generator.cxx
TRANSLATOR_HDRS += atk2_generator.h

TRANSLATOR_SRCS += support_yaml.cxx
TRANSLATOR_HDRS += support_yaml.h

TRANSLATOR_SRCS += smbp_generator.cxx
TRANSLATOR_HDRS += smbp_generator.h

TRANSLATOR_SRCS += mcos_generator.cxx
TRANSLATOR_HDRS += mcos_generator.h

TRANSLATOR_OBJS = $(TRANSLATOR_SRCS:.cxx=.o)
TRANSLATOR_DEPS = $(TRANSLATOR_SRCS:.cxx=.d)
TRANSLATOR_PROG = csp_translator
TRANSLATOR_PROG_FILE = $(TRANSLATOR_PROG)$(EXE_EXT)

MCOS_DUMP_DBG_PRINT_SRC = mcos_dump_dbg_print.cxx
MCOS_DUMP_DBG_PRINT_OBJ = $(MCOS_DUMP_DBG_PRINT_SRC:.cxx=.o)
MCOS_DUMP_DBG_PRINT_DEP = $(MCOS_DUMP_DBG_PRINT_SRC:.cxx=.d)
MCOS_DUMP_DBG_PRINT_PRG = $(MCOS_DUMP_DBG_PRINT_SRC:.cxx=)
MCOS_DUMP_DBG_PRINT_PRG_FILE = $(MCOS_DUMP_DBG_PRINT_PRG)$(EXE_EXT)

ATK2_DUMP_DBG_PRINT_SRC = atk2_dump_dbg_print.cxx
ATK2_DUMP_DBG_PRINT_OBJ = $(ATK2_DUMP_DBG_PRINT_SRC:.cxx=.o)
ATK2_DUMP_DBG_PRINT_DEP = $(ATK2_DUMP_DBG_PRINT_SRC:.cxx=.d)
ATK2_DUMP_DBG_PRINT_PRG = $(ATK2_DUMP_DBG_PRINT_SRC:.cxx=)
ATK2_DUMP_DBG_PRINT_PRG_FILE = $(ATK2_DUMP_DBG_PRINT_PRG)$(EXE_EXT)

SUPPORT_PRG_OBJS = $(MCOS_DUMP_DBG_PRINT_OBJ) \
	$(ATK2_DUMP_DBG_PRINT_OBJ)
SUPPORT_PRG_DEPS = $(MCOS_DUMP_DBG_PRINT_DEP) \
	$(ATK2_DUMP_DBG_PRINT_DEP)
SUPPORT_PRG_PRGS = $(MCOS_DUMP_DBG_PRINT_PRG) \
	$(ATK2_DUMP_DBG_PRINT_PRG)
SUPPORT_PRG_PRG_FILES = $(MCOS_DUMP_DBG_PRINT_PRG_FILE) \
	$(ATK2_DUMP_DBG_PRINT_PRG_FILE)

DISTCLEAN_FILES =

PREPARE_LIST =

DIST_MAKEFILE_LIST = $(filter-out \
	%.d $(MAKE_DEFS_DIR)/% $(SIMULINK_XSD)/%,\
	$(MAKEFILE_LIST))

DIST_FILES = $(DIST_MAKEFILE_LIST)
DIST_FILES += readme.txt
DIST_FILES += $(TRANSLATOR_SRCS) $(TRANSLATOR_HDRS)

CLEAN_FILES = $(TRANSLATOR_PROG_FILE) $(TRANSLATOR_OBJS) \
		$(SUPPORT_PRG_PRG_FILES) \
		$(SUPPORT_PRG_OBJS)

DISTCLEAN_FILES += $(TRANSLATOR_DEPS)
DISTCLEAN_FILES += $(SUPPORT_PRG_DEPS)

DEPEND_FILES += $(TRANSLATOR_DEPS) $(SUPPORT_PRG_DEPS)

SUFFIXES += $(TEST_CONF_SUFFIXES)
PHONY_TARGETS += prepare program etags ctags $(TEST_CONF_PHONY)


TEST_CONF_SUFFIXES=
TEST_CONF_PHONY=

all: program

-include test.conf.mk

prepare: $(PREPARE_LIST)

program: prepare $(TRANSLATOR_PROG) $(SUPPORT_PRG_PRGS)

$(TRANSLATOR_PROG): $(TRANSLATOR_OBJS)
$(TRANSLATOR_PROG): $(TRANSLATOR_PROG_DEPS)
$(TRANSLATOR_PROG): override LDLIBS += $(TRANSLATOR_LDLIBS)

$(MCOS_DUMP_DBG_PRINT_PRG): $(MCOS_DUMP_DBG_PRINT_OBJ)
$(MCOS_DUMP_DBG_PRINT_PRG): $(MCOS_DUMP_DBG_PRINT_PROG_DEP)
$(MCOS_DUMP_DBG_PRINT_PRG): override LDLIBS += $(SIMULINK_XSD_LDLIBS)

$(ATK2_DUMP_DBG_PRINT_PRG): $(ATK2_DUMP_DBG_PRINT_OBJ)
$(ATK2_DUMP_DBG_PRINT_PRG): $(ATK2_DUMP_DBG_PRINT_PROG_DEP)
$(ATK2_DUMP_DBG_PRINT_PRG): override LDLIBS += $(SIMULINK_XSD_LDLIBS)

OUT_DIST_LIST := $(patsubst %,$(lastword $(subst /, ,$(shell pwd)))/%,$(DIST_FILES))

distlist: $(DIST_LIST)
	( for i in $(OUT_DIST_LIST); do echo $$i; done ) > $@

etags: TAGS
TAGS: $(DIST_MAKEFILE_LIST)
TAGS: $(TRANSLATOR_SRCS) $(TRANSLATOR_HDRS)
	etags $(filter %.c %.h %.hxx %.cxx,$^)

ctags: tags
tags: $(DIST_MAKEFILE_LIST)
tags: $(TRANSLATOR_SRCS) $(TRANSLATOR_HDRS)
	ctags $(filter %.c %.h %.hxx %.cxx,$^)

$(SIM_XML_SCHEMA): $(SIMULINK_XSD)/$(SIM_XML_SCHEMA)
	ln -s $(SIMULINK_XSD)/$@

include $(SIMULINK_XSD)/post.simulink_xsd.mk
